name: 'action vercel deployment info'
description: 'This GitHub action retrieves information for a given vercel deployment.'
branding:
  icon: 'triangle'
  color: 'white'

inputs:
  deployment-url:
    description: The URL to get the information for.
  vercel-token:
    description: API token for Vercel
    required: true
  vercel-org-id:
    description: Org/Team ID
    required: false

outputs:
  full:
    description: the full deployment information (refer https://vercel.com/docs/rest-api/endpoints#get-a-deployment-by-id-or-url)
    value: ${{ steps.info.outputs.full }}
  name:
    description: the name of the project
    value: ${{ steps.info.outputs.sha }}
  sha:
    description: the commit sha
    value: ${{ steps.info.outputs.sha }}
  prId:
    description: the pr the deployment is for
    value: ${{ steps.info.outputs.sha }}
  githubCommitAuthorName:
    description: the commit author name
    value: ${{ steps.info.outputs.githubCommitAuthorName }}
  githubCommitMessage:
    description: the commit message
    value: ${{ steps.info.outputs.githubCommitMessage }}
  githubCommitOrg:
    description: the commit org
    value: ${{ steps.info.outputs.githubCommitOrg }}
  ref:
    description: the commit ref
    value: ${{ steps.info.outputs.ref }}
  githubCommitRepo:
    description: the commit repo
    value: ${{ steps.info.outputs.githubCommitRepo }}
  branchAlias:
    description: the branch alias
    value: ${{ steps.info.outputs.branchAlias }}
  target:
    description: the target (production|preview)
    value: ${{ steps.info.outputs.target }}

runs:
  using: "composite"
  steps:
    - name: set deployment domain
      id: domain
      shell: bash
      env:
        URL: ${{inputs.deployment-url}}
      run: |
        echo "domain=${URL#'https://'}" >>$GITHUB_OUTPUT
    - name: get the current deployment
      shell: bash
      run: |
        curl -H "Authorization: Bearer ${{inputs.vercel-token}}" "https://api.vercel.com/v13/deployments/${{ steps.domain.outputs.domain }}?withGitRepoInfo=true&teamId=${{inputs.vercel-org-id}}" > deployment.json
    - name: extract information
      id: info
      shell: bash
      run: |
        echo "full=$(cat deployment.json)" >>$GITHUB_OUTPUT
        echo "ref=$(cat deployment.json | jq -r '.gitSource.ref')" >>$GITHUB_OUTPUT
        echo "sha=$(cat deployment.json | jq -r '.gitSource.sha')" >>$GITHUB_OUTPUT
        echo "prId=$(cat deployment.json | jq -r '.gitSource.prId')" >>$GITHUB_OUTPUT
        echo "name=$(cat deployment.json | jq -r '.name')" >>$GITHUB_OUTPUT
        echo "githubCommitAuthorName=$(cat deployment.json | jq -r '.meta.githubCommitAuthorName')" >>$GITHUB_OUTPUT
        echo "githubCommitMessage=$(cat deployment.json | jq -r '.meta.githubCommitMessage')" >>$GITHUB_OUTPUT
        echo "githubCommitOrg=$(cat deployment.json | jq -r '.meta.githubCommitOrg')" >>$GITHUB_OUTPUT
        echo "githubCommitRepo=$(cat deployment.json | jq -r '.meta.githubCommitRepo')" >>$GITHUB_OUTPUT
        echo "branchAlias=$(cat deployment.json | jq -r '.meta.branchAlias')" >>$GITHUB_OUTPUT
        echo "target=$(cat deployment.json | jq -r '.meta.githubCommitSha')" >>$GITHUB_OUTPUT

